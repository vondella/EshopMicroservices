
version: '3.4'

services:
  catalogdb:
    image: postgres

  mongo:
    image: mongo
  mongocatalog:
    image: mongo
  mongogrpc:
    image: mongo

  basketdb:
    image: postgres

  socialPostgresdb:
    image: postgres 

  distributedcache:
    image: redis
  messagebroker:
    image: rabbitmq:management


  orderdb:
    image: mcr.microsoft.com/mssql/server

  authdb:
    image: mcr.microsoft.com/mssql/server

  socialdb:
    image: mcr.microsoft.com/mssql/server

  # catalogapi:
  #   image: ${DOCKER_REGISTRY-}catalogapi
  #   build:
  #     context: .
  #     dockerfile: services/catalog/catalogApi/Dockerfile
  # basketapi:
  #   image: ${DOCKER_REGISTRY-}basketapi
  #   build:
  #     context: .
  #     dockerfile: services/basket/basket.Api/Dockerfile

  # discount.grpc:
  #   image: ${DOCKER_REGISTRY-}discountgrpc
  #   build:
  #     context: .
  #     dockerfile: services/discount/discount.Grpc/Dockerfile

  # orderingapi:
  #   image: ${DOCKER_REGISTRY-}orderingapi
  #   build:
  #     context: .
  #     dockerfile: services/ordering/OrderingApi/Dockerfile
  
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.13.4

  play.catalog.client:
    image: ${DOCKER_REGISTRY-}playcatalogclient
    build:
      context: .
      dockerfile: Play.Catalog/Play.Catalog.Client/Dockerfile

  play.identity.service:
    image: ${DOCKER_REGISTRY-}playidentityservice
    build:
      context: .
      dockerfile: Play.Catalog/Play.Identity.Service/Dockerfile

  play.inventory.client:
    image: ${DOCKER_REGISTRY-}playinventoryclient
    build:
      context: .
      dockerfile: Play.Catalog/Play.Inventory.Client/Dockerfile

  play.trading:
    image: ${DOCKER_REGISTRY-}playtrading
    build:
      context: .
      dockerfile: Play.Catalog/Play.Trading/Dockerfile

volumes:
  postgres_catalog:
  postgres_basket:
  postgres_social:
  elasticsearch-data:
  mongodata:
  mongogrpcdata:
  # mssql_data:
    






